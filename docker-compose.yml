# version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "raw-topic1:1, processed-topic1:1"
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 12

  load-generator:
    build:
      context: ./load-generator
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network

  kafka-consumer:
    build:
      context: ./consumer-service
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network
    ports:
      - "8000:8000"  # Prometheus scraping

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - kafka-network

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - kafka-network

  flink-jobmanager:
    image: flink:1.19
    command: jobmanager
    ports:
      - "8081:8081"
      - "9250:9249"  # Prometheus scraping
    environment:
      - |
        FLINK_PROPERTIES=
        JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
        jobmanager.rpc.address: -jobmanager
        metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        metrics.reporter.prom.port: 9249
      - FLINK_CONF_DIR=/opt/flink/conf
    volumes:
      - ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    networks:
      - kafka-network

  flink-taskmanager:
    image: flink:1.19
    command: taskmanager
    depends_on:
      - flink-jobmanager
    ports:
      - "9251:9249"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        metrics.reporter.prom.port: 9249
      - FLINK_CONF_DIR=/opt/flink/conf
    volumes:
      - ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    networks:
      - kafka-network

  og-prink-job:
    build:
      context: ./og-prink
    depends_on:
      - flink-jobmanager
      - flink-taskmanager
      - kafka-consumer
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    volumes:
      - ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    networks:
      - kafka-network

  flink-job:
    build:
      context: ./flink-job
    depends_on:
      - flink-jobmanager
      - flink-taskmanager
    ports:
      - "8003:8003"  # Prometheus scraping
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - kafka-network

  # prink-job:
  #   build:
  #     context: ./prink-job
  #   depends_on:
  #     - flink-jobmanager
  #     - flink-taskmanager
  #   ports:
  #     - "8002:8002"  # Prometheus scraping
  #   environment:
  #     - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
  #   networks:
  #     - kafka-network


networks:
  kafka-network:
    driver: bridge