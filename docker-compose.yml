# version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "raw-topic1:1, processed-topic1:1"
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 12

  load-generator:
    build:
      context: ./load-generator
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network

  kafka-consumer:
    build:
      context: ./consumer-service
    depends_on:
      # - flink-job
      kafka:
        condition: service_healthy
    networks:
      - kafka-network
    ports:
      - "8000:8000"  # Exposed the metrics port for Prometheus scraping

  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - '9090:9090'
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - kafka-network

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./grafana:/var/lib/grafana
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - kafka-network

  flink-jobmanager:
    image: flink:latest
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - kafka-network

  flink-taskmanager:
    image: flink:latest
    command: taskmanager
    depends_on:
      - flink-jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - kafka-network

  flink-job:
    build:
      context: ./flink-job
    depends_on:
      - flink-jobmanager
      - flink-taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge