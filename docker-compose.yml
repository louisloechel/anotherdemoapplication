version: '3.8'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'
    networks:
      - kafka-network

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 12

  load-generator:
    build:
      context: ./load-generator
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network

  flink-jobmanager:
    image: flink:1.15-scala_2.12
    command: jobmanager
    ports:
      - '8081:8081'
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    networks:
      - kafka-network

  flink-taskmanager:
    image: flink:1.15-scala_2.12
    command: taskmanager
    depends_on:
      - flink-jobmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    networks:
      - kafka-network

  kafka-consumer:
    build:
      context: ./consumer-service
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network
    ports:
      - "8000:8000"  # Exposed the metrics port for Prometheus scraping

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - kafka-network

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge